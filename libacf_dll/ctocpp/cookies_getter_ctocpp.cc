// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=27195be3114f0aed35096db3e9e5dba776302e69$
//

#include "libacf_dll/ctocpp/cookies_getter_ctocpp.h"
#include "libacf_dll/ctocpp/cookie_ctocpp.h"

// VIRTUAL METHODS - Body may be edited by hand.

size_t AcfCookiesGetterCToCpp::GetCookiesCount() {
  acf_cookies_getter_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_cookies_count))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  size_t _retval = _struct->get_cookies_count(_struct);

  // Return type: simple
  return _retval;
}

AcfRefPtr<AcfCookie> AcfCookiesGetterCToCpp::GetCookieAt(size_t index) {
  acf_cookies_getter_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_cookie_at))
    return nullptr;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_cookie_t* _retval = _struct->get_cookie_at(_struct, index);

  // Return type: refptr_same
  return AcfCookieCToCpp::Wrap(_retval);
}

// CONSTRUCTOR - Do not edit by hand.

AcfCookiesGetterCToCpp::AcfCookiesGetterCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

AcfCookiesGetterCToCpp::~AcfCookiesGetterCToCpp() {}

template <>
acf_cookies_getter_t*
AcfCToCppRefCounted<AcfCookiesGetterCToCpp,
                    AcfCookiesGetter,
                    acf_cookies_getter_t>::UnwrapDerived(AcfWrapperType type,
                                                         AcfCookiesGetter* c) {
  return nullptr;
}

template <>
AcfWrapperType AcfCToCppRefCounted<AcfCookiesGetterCToCpp,
                                   AcfCookiesGetter,
                                   acf_cookies_getter_t>::kWrapperType =
    WT_COOKIES_GETTER;
