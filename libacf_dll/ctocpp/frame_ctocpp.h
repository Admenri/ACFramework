// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=5b57d81c946936f4681594662af435344c84fb3b$
//

#ifndef ACF_CTOCPP_FRAME_CTOCPP_H_
#define ACF_CTOCPP_FRAME_CTOCPP_H_
#pragma once

#include "include/acf_browser.h"
#include "include/acf_callback.h"
#include "include/acf_frame.h"
#include "include/capi/acf_browser_capi.h"
#include "include/capi/acf_callback_capi.h"
#include "include/capi/acf_frame_capi.h"
#include "libacf_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class AcfFrameCToCpp
    : public AcfCToCppRefCounted<AcfFrameCToCpp, AcfFrame, acf_frame_t> {
 public:
  AcfFrameCToCpp();
  virtual ~AcfFrameCToCpp();

  // AcfFrame methods.
  bool IsValid() override;
  bool IsSame(AcfRefPtr<AcfFrame> object) override;
  AcfRefPtr<AcfFrame> GetParent() override;
  AcfRefPtr<AcfBrowser> GetBrowser() override;
  AcfString GetURL() override;
  AcfString GetName() override;
  int64 GetIdentifier() override;
  bool IsMain() override;
  void ExecuteJavascript(const AcfString& script,
                         const AcfString& url,
                         AcfRefPtr<AcfCompleteValueHandler> handler) override;
  void GetSource(AcfRefPtr<AcfStringVisitor> visitor) override;
  void GetText(AcfRefPtr<AcfStringVisitor> visitor) override;
};

#endif  // ACF_CTOCPP_FRAME_CTOCPP_H_
