// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=5cd2c432234043ee17896008322967a7ad961945$
//

#include "libacf_dll/ctocpp/cookie_ctocpp.h"

// VIRTUAL METHODS - Body may be edited by hand.

AcfString AcfCookieCToCpp::GetName() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_name))
    return AcfString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_string_userfree_t _retval = _struct->get_name(_struct);

  // Return type: string
  AcfString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

void AcfCookieCToCpp::SetName(const AcfString& value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_name))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Unverified params: value

  // Execute
  _struct->set_name(_struct, value.GetStruct());
}

AcfString AcfCookieCToCpp::GetValue() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_value))
    return AcfString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_string_userfree_t _retval = _struct->get_value(_struct);

  // Return type: string
  AcfString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

void AcfCookieCToCpp::SetValue(const AcfString& value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_value))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Unverified params: value

  // Execute
  _struct->set_value(_struct, value.GetStruct());
}

AcfString AcfCookieCToCpp::GetDomain() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_domain))
    return AcfString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_string_userfree_t _retval = _struct->get_domain(_struct);

  // Return type: string
  AcfString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

void AcfCookieCToCpp::SetDomain(const AcfString& value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_domain))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Unverified params: value

  // Execute
  _struct->set_domain(_struct, value.GetStruct());
}

AcfString AcfCookieCToCpp::GetPath() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_path))
    return AcfString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_string_userfree_t _retval = _struct->get_path(_struct);

  // Return type: string
  AcfString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

void AcfCookieCToCpp::SetPath(const AcfString& value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_path))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Unverified params: value

  // Execute
  _struct->set_path(_struct, value.GetStruct());
}

bool AcfCookieCToCpp::IsHttponly() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, is_httponly))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_httponly(_struct);

  // Return type: bool
  return _retval ? true : false;
}

void AcfCookieCToCpp::SetHttponly(bool value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_httponly))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->set_httponly(_struct, value);
}

bool AcfCookieCToCpp::IsSecure() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, is_secure))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_secure(_struct);

  // Return type: bool
  return _retval ? true : false;
}

void AcfCookieCToCpp::SetSecure(bool value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_secure))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->set_secure(_struct, value);
}

AcfCookie::AcfCookieSameSite AcfCookieCToCpp::GetSameSite() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_same_site))
    return ACF_COOKIE_SAME_SITE_NO_RESTRICTION;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_cookie_same_site_t _retval = _struct->get_same_site(_struct);

  // Return type: simple
  return _retval;
}

void AcfCookieCToCpp::SetSameSite(AcfCookieSameSite value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_same_site))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->set_same_site(_struct, value);
}

AcfCookie::AcfCookiePriority AcfCookieCToCpp::GetPriority() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_priority))
    return ACF_COOKIE_PRIORITY_MEDIUM;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_cookie_priority_t _retval = _struct->get_priority(_struct);

  // Return type: simple
  return _retval;
}

void AcfCookieCToCpp::SetPriority(AcfCookiePriority value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_priority))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->set_priority(_struct, value);
}

double AcfCookieCToCpp::GetCreation() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_creation))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  double _retval = _struct->get_creation(_struct);

  // Return type: simple
  return _retval;
}

void AcfCookieCToCpp::SetCreation(double value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_creation))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->set_creation(_struct, value);
}

double AcfCookieCToCpp::GetExpiry() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_expiry))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  double _retval = _struct->get_expiry(_struct);

  // Return type: simple
  return _retval;
}

void AcfCookieCToCpp::SetExpiry(double value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_expiry))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->set_expiry(_struct, value);
}

double AcfCookieCToCpp::GetLastAccess() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_last_access))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  double _retval = _struct->get_last_access(_struct);

  // Return type: simple
  return _retval;
}

void AcfCookieCToCpp::SetLastAccess(double value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_last_access))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->set_last_access(_struct, value);
}

double AcfCookieCToCpp::GetLastUpdate() {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_last_update))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  double _retval = _struct->get_last_update(_struct);

  // Return type: simple
  return _retval;
}

void AcfCookieCToCpp::SetLastUpdate(double value) {
  acf_cookie_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_last_update))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->set_last_update(_struct, value);
}

// CONSTRUCTOR - Do not edit by hand.

AcfCookieCToCpp::AcfCookieCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

AcfCookieCToCpp::~AcfCookieCToCpp() {}

template <>
acf_cookie_t*
AcfCToCppRefCounted<AcfCookieCToCpp, AcfCookie, acf_cookie_t>::UnwrapDerived(
    AcfWrapperType type,
    AcfCookie* c) {
  return nullptr;
}

template <>
AcfWrapperType AcfCToCppRefCounted<AcfCookieCToCpp, AcfCookie, acf_cookie_t>::
    kWrapperType = WT_COOKIE;
