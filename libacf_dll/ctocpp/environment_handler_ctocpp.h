// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=bdb0f08c543b6f43c7419eba9204142057d92be4$
//

#ifndef ACF_CTOCPP_ENVIRONMENT_HANDLER_CTOCPP_H_
#define ACF_CTOCPP_ENVIRONMENT_HANDLER_CTOCPP_H_
#pragma once

#include "include/acf_browser.h"
#include "include/acf_browser_handler.h"
#include "include/acf_environment.h"
#include "include/acf_profile.h"
#include "include/acf_request.h"
#include "include/acf_resource_request_handler.h"
#include "include/acf_response.h"
#include "include/acf_values.h"
#include "include/capi/acf_browser_capi.h"
#include "include/capi/acf_browser_handler_capi.h"
#include "include/capi/acf_environment_capi.h"
#include "include/capi/acf_profile_capi.h"
#include "include/capi/acf_request_capi.h"
#include "include/capi/acf_resource_request_handler_capi.h"
#include "include/capi/acf_response_capi.h"
#include "include/capi/acf_values_capi.h"
#include "libacf_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class AcfEnvironmentHandlerCToCpp
    : public AcfCToCppRefCounted<AcfEnvironmentHandlerCToCpp,
                                 AcfEnvironmentHandler,
                                 acf_environment_handler_t> {
 public:
  AcfEnvironmentHandlerCToCpp();
  virtual ~AcfEnvironmentHandlerCToCpp();

  // AcfEnvironmentHandler methods.
  void OnInitialized(AcfRefPtr<AcfEnvironment> env, bool success) override;
  AcfRefPtr<AcfResourceRequestHandler> GetResourceRequestHandler(
      AcfRefPtr<AcfProfile> profile,
      int64 frame_id,
      AcfRefPtr<AcfRequest> request,
      bool is_navigation,
      bool is_download,
      const AcfString& request_initiator,
      bool& block_request) override;
};

#endif  // ACF_CTOCPP_ENVIRONMENT_HANDLER_CTOCPP_H_
