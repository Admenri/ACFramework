// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=c807cb8bc4b4b6bf7e626890cc546e1e28093ac6$
//

#include "libacf_dll/ctocpp/environment_handler_ctocpp.h"
#include "libacf_dll/cpptoc/environment_cpptoc.h"

// VIRTUAL METHODS - Body may be edited by hand.

void AcfEnvironmentHandlerCToCpp::OnInitialized(AcfRefPtr<AcfEnvironment> env,
                                                bool success) {
  acf_environment_handler_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, on_initialized))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: env; type: refptr_diff
  if (!env.get())
    return;

  // Execute
  _struct->on_initialized(_struct, AcfEnvironmentCppToC::Wrap(env), success);
}

// CONSTRUCTOR - Do not edit by hand.

AcfEnvironmentHandlerCToCpp::AcfEnvironmentHandlerCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

AcfEnvironmentHandlerCToCpp::~AcfEnvironmentHandlerCToCpp() {}

template <>
acf_environment_handler_t* AcfCToCppRefCounted<
    AcfEnvironmentHandlerCToCpp,
    AcfEnvironmentHandler,
    acf_environment_handler_t>::UnwrapDerived(AcfWrapperType type,
                                              AcfEnvironmentHandler* c) {
  return nullptr;
}

template <>
AcfWrapperType AcfCToCppRefCounted<AcfEnvironmentHandlerCToCpp,
                                   AcfEnvironmentHandler,
                                   acf_environment_handler_t>::kWrapperType =
    WT_ENVIRONMENT_HANDLER;
