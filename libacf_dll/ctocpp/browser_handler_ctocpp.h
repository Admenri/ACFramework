// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=a49a916f9655f38874472e14f059c824a95afdbe$
//

#ifndef ACF_CTOCPP_BROWSER_HANDLER_CTOCPP_H_
#define ACF_CTOCPP_BROWSER_HANDLER_CTOCPP_H_
#pragma once

#include <vector>
#include "include/acf_browser_handler.h"
#include "include/capi/acf_browser_handler_capi.h"
#include "libacf_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class AcfBrowserHandlerCToCpp
    : public AcfCToCppRefCounted<AcfBrowserHandlerCToCpp,
                                 AcfBrowserHandler,
                                 acf_browser_handler_t> {
 public:
  AcfBrowserHandlerCToCpp();
  virtual ~AcfBrowserHandlerCToCpp();

  // AcfBrowserHandler methods.
  void OnBrowserCreated(AcfRefPtr<AcfBrowser> browser) override;
  void OnNewWindowRequest(AcfRefPtr<AcfBrowser> browser,
                          NewWindowSource source,
                          NewWindowDisposition disposition,
                          bool user_gesture,
                          AcfRefPtr<AcfNewWindowDelegate> delegate) override;
  void OnBrowserDestroyed(AcfRefPtr<AcfBrowser> browser) override;
  void OnLoadingStateChanged(AcfRefPtr<AcfBrowser> browser,
                             bool show_loading_ui) override;
  void OnNavigationStateChanged(AcfRefPtr<AcfBrowser> browser,
                                NavigationTypes flags) override;
  void OnTitleChanged(AcfRefPtr<AcfBrowser> browser,
                      const AcfString& title) override;
  void OnAddressChanged(AcfRefPtr<AcfBrowser> browser,
                        const AcfString& address) override;
  void OnFullscreenStateChanged(AcfRefPtr<AcfBrowser> browser,
                                bool fullscreen) override;
  void OnAuthLoginRequest(AcfRefPtr<AcfBrowser> browser,
                          bool is_proxy,
                          const AcfString& url,
                          const AcfString& scheme,
                          const AcfString& realm,
                          const AcfString& challenge,
                          bool is_main_frame,
                          AcfRefPtr<AcfLoginDelegate> delegate) override;
  void OnContextMenuRequest(
      AcfRefPtr<AcfBrowser> browser,
      AcfRefPtr<AcfContextMenuParams> menu_params,
      AcfRefPtr<AcfContextMenuModel> menu_model,
      AcfRefPtr<AcfContextMenuCallback> callback) override;
  void OnContextMenuExecute(AcfRefPtr<AcfBrowser> browser,
                            AcfRefPtr<AcfContextMenuParams> menu_params,
                            int command_id,
                            int event_flags) override;
  void OnLoadStart(AcfRefPtr<AcfBrowser> browser,
                   AcfRefPtr<AcfFrame> frame,
                   int transition) override;
  void OnLoadEnd(AcfRefPtr<AcfBrowser> browser,
                 AcfRefPtr<AcfFrame> frame,
                 const AcfString& url,
                 int http_status_code) override;
  void OnLoadError(AcfRefPtr<AcfBrowser> browser,
                   AcfRefPtr<AcfFrame> frame,
                   const AcfString& url,
                   int error_code) override;
  void OnFaviconURLChange(AcfRefPtr<AcfBrowser> browser,
                          const std::vector<AcfString>& icon_urls) override;
  void OnConsoleMessage(AcfRefPtr<AcfBrowser> browser,
                        int level,
                        const AcfString& message,
                        const AcfString& source,
                        int line,
                        const AcfString& trace) override;
  void OnLoadingProgressChange(AcfRefPtr<AcfBrowser> browser,
                               double progress) override;
  void OnAudioStateChange(AcfRefPtr<AcfBrowser> browser, bool audible) override;
  void DidMuteStateUpdate(AcfRefPtr<AcfBrowser> browser, bool muted) override;
};

#endif  // ACF_CTOCPP_BROWSER_HANDLER_CTOCPP_H_
