// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=b1a2b8c9e06d59c098d132ad3834f1464e62279e$
//

#include "libacf_dll/cpptoc/number_complete_handler_cpptoc.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void ACF_CALLBACK
number_complete_handler_on_complete(struct _acf_number_complete_handler_t* self,
                                    int value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfNumberCompleteHandlerCppToC::Get(self)->OnComplete(value);
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfNumberCompleteHandlerCppToC::AcfNumberCompleteHandlerCppToC() {
  GetStruct()->on_complete = number_complete_handler_on_complete;
}

// DESTRUCTOR - Do not edit by hand.

AcfNumberCompleteHandlerCppToC::~AcfNumberCompleteHandlerCppToC() {}

template <>
AcfRefPtr<AcfNumberCompleteHandler> AcfCppToCRefCounted<
    AcfNumberCompleteHandlerCppToC,
    AcfNumberCompleteHandler,
    acf_number_complete_handler_t>::UnwrapDerived(AcfWrapperType type,
                                                  acf_number_complete_handler_t*
                                                      s) {
  return nullptr;
}

template <>
AcfWrapperType
    AcfCppToCRefCounted<AcfNumberCompleteHandlerCppToC,
                        AcfNumberCompleteHandler,
                        acf_number_complete_handler_t>::kWrapperType =
        WT_NUMBER_COMPLETE_HANDLER;
