// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=1b73ea5d6f6eac8667c109c698392a0cee3869fe$
//

#include "libacf_dll/cpptoc/context_menu_callback_cpptoc.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void ACF_CALLBACK
context_menu_callback_cont(struct _acf_context_menu_callback_t* self,
                           int suppress) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfContextMenuCallbackCppToC::Get(self)->Continue(suppress ? true : false);
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfContextMenuCallbackCppToC::AcfContextMenuCallbackCppToC() {
  GetStruct()->cont = context_menu_callback_cont;
}

// DESTRUCTOR - Do not edit by hand.

AcfContextMenuCallbackCppToC::~AcfContextMenuCallbackCppToC() {}

template <>
AcfRefPtr<AcfContextMenuCallback> AcfCppToCRefCounted<
    AcfContextMenuCallbackCppToC,
    AcfContextMenuCallback,
    acf_context_menu_callback_t>::UnwrapDerived(AcfWrapperType type,
                                                acf_context_menu_callback_t*
                                                    s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfContextMenuCallbackCppToC,
                                   AcfContextMenuCallback,
                                   acf_context_menu_callback_t>::kWrapperType =
    WT_CONTEXT_MENU_CALLBACK;
