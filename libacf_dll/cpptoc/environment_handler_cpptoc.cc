// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=90bf8f9af4053232a8e5fdce49503e4500eb09b8$
//

#include "libacf_dll/cpptoc/environment_handler_cpptoc.h"
#include "libacf_dll/ctocpp/environment_ctocpp.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void ACF_CALLBACK
environment_handler_on_initialized(struct _acf_environment_handler_t* self,
                                   struct _acf_environment_t* env,
                                   int success) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;
  // Verify param: env; type: refptr_diff
  if (!env)
    return;

  // Execute
  AcfEnvironmentHandlerCppToC::Get(self)->OnInitialized(
      AcfEnvironmentCToCpp::Wrap(env), success ? true : false);
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfEnvironmentHandlerCppToC::AcfEnvironmentHandlerCppToC() {
  GetStruct()->on_initialized = environment_handler_on_initialized;
}

// DESTRUCTOR - Do not edit by hand.

AcfEnvironmentHandlerCppToC::~AcfEnvironmentHandlerCppToC() {}

template <>
AcfRefPtr<AcfEnvironmentHandler> AcfCppToCRefCounted<
    AcfEnvironmentHandlerCppToC,
    AcfEnvironmentHandler,
    acf_environment_handler_t>::UnwrapDerived(AcfWrapperType type,
                                              acf_environment_handler_t* s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfEnvironmentHandlerCppToC,
                                   AcfEnvironmentHandler,
                                   acf_environment_handler_t>::kWrapperType =
    WT_ENVIRONMENT_HANDLER;
