// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=7e88884932b5871d4a9880b106a94d6c67a99ab9$
//

#include "libacf_dll/cpptoc/cookies_getter_cpptoc.h"
#include "libacf_dll/cpptoc/cookie_cpptoc.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

size_t ACF_CALLBACK
cookies_getter_get_cookies_count(struct _acf_cookies_getter_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  size_t _retval = AcfCookiesGetterCppToC::Get(self)->GetCookiesCount();

  // Return type: simple
  return _retval;
}

acf_cookie_t* ACF_CALLBACK
cookies_getter_get_cookie_at(struct _acf_cookies_getter_t* self, size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return NULL;

  // Execute
  AcfRefPtr<AcfCookie> _retval =
      AcfCookiesGetterCppToC::Get(self)->GetCookieAt(index);

  // Return type: refptr_same
  return AcfCookieCppToC::Wrap(_retval);
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfCookiesGetterCppToC::AcfCookiesGetterCppToC() {
  GetStruct()->get_cookies_count = cookies_getter_get_cookies_count;
  GetStruct()->get_cookie_at = cookies_getter_get_cookie_at;
}

// DESTRUCTOR - Do not edit by hand.

AcfCookiesGetterCppToC::~AcfCookiesGetterCppToC() {}

template <>
AcfRefPtr<AcfCookiesGetter> AcfCppToCRefCounted<
    AcfCookiesGetterCppToC,
    AcfCookiesGetter,
    acf_cookies_getter_t>::UnwrapDerived(AcfWrapperType type,
                                         acf_cookies_getter_t* s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfCookiesGetterCppToC,
                                   AcfCookiesGetter,
                                   acf_cookies_getter_t>::kWrapperType =
    WT_COOKIES_GETTER;
