// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=799c6e31bb93ef8664f17dca67af49c132163068$
//

#include "libacf_dll/cpptoc/context_menu_model_cpptoc.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

int ACF_CALLBACK
context_menu_model_is_sub_menu(struct _acf_context_menu_model_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->IsSubMenu();

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_clear(struct _acf_context_menu_model_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->Clear();

  // Return type: bool
  return _retval;
}

size_t ACF_CALLBACK
context_menu_model_get_count(struct _acf_context_menu_model_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  size_t _retval = AcfContextMenuModelCppToC::Get(self)->GetCount();

  // Return type: simple
  return _retval;
}

int ACF_CALLBACK
context_menu_model_insert_separator_at(struct _acf_context_menu_model_t* self,
                                       size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->InsertSeparatorAt(index);

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_insert_item_at(struct _acf_context_menu_model_t* self,
                                  size_t index,
                                  int command_id,
                                  const acf_string_t* label) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;
  // Verify param: label; type: string_byref_const
  if (!label)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->InsertItemAt(
      index, command_id, AcfString(label));

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_insert_check_item_at(struct _acf_context_menu_model_t* self,
                                        size_t index,
                                        int command_id,
                                        const acf_string_t* label) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;
  // Verify param: label; type: string_byref_const
  if (!label)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->InsertCheckItemAt(
      index, command_id, AcfString(label));

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_insert_radio_item_at(struct _acf_context_menu_model_t* self,
                                        size_t index,
                                        int command_id,
                                        const acf_string_t* label,
                                        int group_id) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;
  // Verify param: label; type: string_byref_const
  if (!label)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->InsertRadioItemAt(
      index, command_id, AcfString(label), group_id);

  // Return type: bool
  return _retval;
}

struct _acf_context_menu_model_t* ACF_CALLBACK
context_menu_model_insert_sub_menu_at(struct _acf_context_menu_model_t* self,
                                      size_t index,
                                      int command_id,
                                      const acf_string_t* label) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return NULL;
  // Verify param: label; type: string_byref_const
  if (!label)
    return NULL;

  // Execute
  AcfRefPtr<AcfContextMenuModel> _retval =
      AcfContextMenuModelCppToC::Get(self)->InsertSubMenuAt(index, command_id,
                                                            AcfString(label));

  // Return type: refptr_same
  return AcfContextMenuModelCppToC::Wrap(_retval);
}

int ACF_CALLBACK
context_menu_model_remove_at(struct _acf_context_menu_model_t* self,
                             size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->RemoveAt(index);

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_get_command_id_at(struct _acf_context_menu_model_t* self,
                                     size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  int _retval = AcfContextMenuModelCppToC::Get(self)->GetCommandIdAt(index);

  // Return type: simple
  return _retval;
}

int ACF_CALLBACK
context_menu_model_get_index_of(struct _acf_context_menu_model_t* self,
                                int command_id) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  int _retval = AcfContextMenuModelCppToC::Get(self)->GetIndexOf(command_id);

  // Return type: simple
  return _retval;
}

int ACF_CALLBACK
context_menu_model_set_command_id_at(struct _acf_context_menu_model_t* self,
                                     size_t index,
                                     int command_id) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval =
      AcfContextMenuModelCppToC::Get(self)->SetCommandIdAt(index, command_id);

  // Return type: bool
  return _retval;
}

acf_string_userfree_t ACF_CALLBACK
context_menu_model_get_label_at(struct _acf_context_menu_model_t* self,
                                size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return NULL;

  // Execute
  AcfString _retval = AcfContextMenuModelCppToC::Get(self)->GetLabelAt(index);

  // Return type: string
  return _retval.DetachToUserFree();
}

int ACF_CALLBACK
context_menu_model_set_label_at(struct _acf_context_menu_model_t* self,
                                size_t index,
                                const acf_string_t* label) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;
  // Verify param: label; type: string_byref_const
  if (!label)
    return 0;

  // Execute
  bool _retval =
      AcfContextMenuModelCppToC::Get(self)->SetLabelAt(index, AcfString(label));

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_is_visible_at(struct _acf_context_menu_model_t* self,
                                 size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->IsVisibleAt(index);

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_set_visible_at(struct _acf_context_menu_model_t* self,
                                  size_t index,
                                  int visible) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->SetVisibleAt(
      index, visible ? true : false);

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_is_enabled_at(struct _acf_context_menu_model_t* self,
                                 size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->IsEnabledAt(index);

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_set_enabled_at(struct _acf_context_menu_model_t* self,
                                  size_t index,
                                  int enabled) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->SetEnabledAt(
      index, enabled ? true : false);

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_get_group_id_at(struct _acf_context_menu_model_t* self,
                                   size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  int _retval = AcfContextMenuModelCppToC::Get(self)->GetGroupIdAt(index);

  // Return type: simple
  return _retval;
}

int ACF_CALLBACK
context_menu_model_set_group_id_at(struct _acf_context_menu_model_t* self,
                                   size_t index,
                                   int group_id) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval =
      AcfContextMenuModelCppToC::Get(self)->SetGroupIdAt(index, group_id);

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_is_checked_at(struct _acf_context_menu_model_t* self,
                                 size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->IsCheckedAt(index);

  // Return type: bool
  return _retval;
}

int ACF_CALLBACK
context_menu_model_set_checked_at(struct _acf_context_menu_model_t* self,
                                  size_t index,
                                  int checked) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfContextMenuModelCppToC::Get(self)->SetCheckedAt(
      index, checked ? true : false);

  // Return type: bool
  return _retval;
}

struct _acf_context_menu_model_t* ACF_CALLBACK
context_menu_model_get_sub_menu_at(struct _acf_context_menu_model_t* self,
                                   size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return NULL;

  // Execute
  AcfRefPtr<AcfContextMenuModel> _retval =
      AcfContextMenuModelCppToC::Get(self)->GetSubMenuAt(index);

  // Return type: refptr_same
  return AcfContextMenuModelCppToC::Wrap(_retval);
}

acf_menu_item_type_t ACF_CALLBACK
context_menu_model_get_type_at(struct _acf_context_menu_model_t* self,
                               size_t index) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return MENUITEMTYPE_NONE;

  // Execute
  acf_menu_item_type_t _retval =
      AcfContextMenuModelCppToC::Get(self)->GetTypeAt(index);

  // Return type: simple
  return _retval;
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfContextMenuModelCppToC::AcfContextMenuModelCppToC() {
  GetStruct()->is_sub_menu = context_menu_model_is_sub_menu;
  GetStruct()->clear = context_menu_model_clear;
  GetStruct()->get_count = context_menu_model_get_count;
  GetStruct()->insert_separator_at = context_menu_model_insert_separator_at;
  GetStruct()->insert_item_at = context_menu_model_insert_item_at;
  GetStruct()->insert_check_item_at = context_menu_model_insert_check_item_at;
  GetStruct()->insert_radio_item_at = context_menu_model_insert_radio_item_at;
  GetStruct()->insert_sub_menu_at = context_menu_model_insert_sub_menu_at;
  GetStruct()->remove_at = context_menu_model_remove_at;
  GetStruct()->get_command_id_at = context_menu_model_get_command_id_at;
  GetStruct()->get_index_of = context_menu_model_get_index_of;
  GetStruct()->set_command_id_at = context_menu_model_set_command_id_at;
  GetStruct()->get_label_at = context_menu_model_get_label_at;
  GetStruct()->set_label_at = context_menu_model_set_label_at;
  GetStruct()->is_visible_at = context_menu_model_is_visible_at;
  GetStruct()->set_visible_at = context_menu_model_set_visible_at;
  GetStruct()->is_enabled_at = context_menu_model_is_enabled_at;
  GetStruct()->set_enabled_at = context_menu_model_set_enabled_at;
  GetStruct()->get_group_id_at = context_menu_model_get_group_id_at;
  GetStruct()->set_group_id_at = context_menu_model_set_group_id_at;
  GetStruct()->is_checked_at = context_menu_model_is_checked_at;
  GetStruct()->set_checked_at = context_menu_model_set_checked_at;
  GetStruct()->get_sub_menu_at = context_menu_model_get_sub_menu_at;
  GetStruct()->get_type_at = context_menu_model_get_type_at;
}

// DESTRUCTOR - Do not edit by hand.

AcfContextMenuModelCppToC::~AcfContextMenuModelCppToC() {}

template <>
AcfRefPtr<AcfContextMenuModel> AcfCppToCRefCounted<
    AcfContextMenuModelCppToC,
    AcfContextMenuModel,
    acf_context_menu_model_t>::UnwrapDerived(AcfWrapperType type,
                                             acf_context_menu_model_t* s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfContextMenuModelCppToC,
                                   AcfContextMenuModel,
                                   acf_context_menu_model_t>::kWrapperType =
    WT_CONTEXT_MENU_MODEL;
