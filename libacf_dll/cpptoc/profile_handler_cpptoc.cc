// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=5ff60adacadc9c2575842b1c3381a0d98f41fee5$
//

#include "libacf_dll/cpptoc/profile_handler_cpptoc.h"
#include "libacf_dll/ctocpp/profile_ctocpp.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void ACF_CALLBACK
profile_handler_on_profile_created(struct _acf_profile_handler_t* self,
                                   struct _acf_profile_t* profile) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;
  // Verify param: profile; type: refptr_diff
  if (!profile)
    return;

  // Execute
  AcfProfileHandlerCppToC::Get(self)->OnProfileCreated(
      AcfProfileCToCpp::Wrap(profile));
}

void ACF_CALLBACK
profile_handler_on_profile_destroyed(struct _acf_profile_handler_t* self,
                                     struct _acf_profile_t* profile) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;
  // Verify param: profile; type: refptr_diff
  if (!profile)
    return;

  // Execute
  AcfProfileHandlerCppToC::Get(self)->OnProfileDestroyed(
      AcfProfileCToCpp::Wrap(profile));
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfProfileHandlerCppToC::AcfProfileHandlerCppToC() {
  GetStruct()->on_profile_created = profile_handler_on_profile_created;
  GetStruct()->on_profile_destroyed = profile_handler_on_profile_destroyed;
}

// DESTRUCTOR - Do not edit by hand.

AcfProfileHandlerCppToC::~AcfProfileHandlerCppToC() {}

template <>
AcfRefPtr<AcfProfileHandler> AcfCppToCRefCounted<
    AcfProfileHandlerCppToC,
    AcfProfileHandler,
    acf_profile_handler_t>::UnwrapDerived(AcfWrapperType type,
                                          acf_profile_handler_t* s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfProfileHandlerCppToC,
                                   AcfProfileHandler,
                                   acf_profile_handler_t>::kWrapperType =
    WT_PROFILE_HANDLER;
