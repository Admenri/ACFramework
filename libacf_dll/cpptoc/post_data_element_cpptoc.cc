// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=5f8c92f877ce5995ec8aeb8369d65e7507ff43fb$
//

#include "libacf_dll/cpptoc/post_data_element_cpptoc.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

int ACF_CALLBACK
post_data_element_is_read_only(struct _acf_post_data_element_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfPostDataElementCppToC::Get(self)->IsReadOnly();

  // Return type: bool
  return _retval;
}

void ACF_CALLBACK
post_data_element_set_to_empty(struct _acf_post_data_element_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfPostDataElementCppToC::Get(self)->SetToEmpty();
}

void ACF_CALLBACK
post_data_element_set_to_file(struct _acf_post_data_element_t* self,
                              const acf_string_t* fileName) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;
  // Verify param: fileName; type: string_byref_const
  if (!fileName)
    return;

  // Execute
  AcfPostDataElementCppToC::Get(self)->SetToFile(AcfString(fileName));
}

void ACF_CALLBACK
post_data_element_set_to_bytes(struct _acf_post_data_element_t* self,
                               size_t size,
                               const void* bytes) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;
  // Verify param: bytes; type: simple_byaddr
  if (!bytes)
    return;

  // Execute
  AcfPostDataElementCppToC::Get(self)->SetToBytes(size, bytes);
}

acf_postdataelement_type_t ACF_CALLBACK
post_data_element_get_type(struct _acf_post_data_element_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return PDE_TYPE_EMPTY;

  // Execute
  acf_postdataelement_type_t _retval =
      AcfPostDataElementCppToC::Get(self)->GetType();

  // Return type: simple
  return _retval;
}

acf_string_userfree_t ACF_CALLBACK
post_data_element_get_file(struct _acf_post_data_element_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return NULL;

  // Execute
  AcfString _retval = AcfPostDataElementCppToC::Get(self)->GetFile();

  // Return type: string
  return _retval.DetachToUserFree();
}

size_t ACF_CALLBACK
post_data_element_get_bytes_count(struct _acf_post_data_element_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  size_t _retval = AcfPostDataElementCppToC::Get(self)->GetBytesCount();

  // Return type: simple
  return _retval;
}

size_t ACF_CALLBACK
post_data_element_get_bytes(struct _acf_post_data_element_t* self,
                            size_t size,
                            void* bytes) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;
  // Verify param: bytes; type: simple_byaddr
  if (!bytes)
    return 0;

  // Execute
  size_t _retval = AcfPostDataElementCppToC::Get(self)->GetBytes(size, bytes);

  // Return type: simple
  return _retval;
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfPostDataElementCppToC::AcfPostDataElementCppToC() {
  GetStruct()->is_read_only = post_data_element_is_read_only;
  GetStruct()->set_to_empty = post_data_element_set_to_empty;
  GetStruct()->set_to_file = post_data_element_set_to_file;
  GetStruct()->set_to_bytes = post_data_element_set_to_bytes;
  GetStruct()->get_type = post_data_element_get_type;
  GetStruct()->get_file = post_data_element_get_file;
  GetStruct()->get_bytes_count = post_data_element_get_bytes_count;
  GetStruct()->get_bytes = post_data_element_get_bytes;
}

// DESTRUCTOR - Do not edit by hand.

AcfPostDataElementCppToC::~AcfPostDataElementCppToC() {}

template <>
AcfRefPtr<AcfPostDataElement> AcfCppToCRefCounted<
    AcfPostDataElementCppToC,
    AcfPostDataElement,
    acf_post_data_element_t>::UnwrapDerived(AcfWrapperType type,
                                            acf_post_data_element_t* s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfPostDataElementCppToC,
                                   AcfPostDataElement,
                                   acf_post_data_element_t>::kWrapperType =
    WT_POST_DATA_ELEMENT;
