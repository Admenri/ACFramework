// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=c4305be5b22fb22af0ca85bc1955bdd73e84aac1$
//

#include "libacf_dll/cpptoc/login_delegate_cpptoc.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void ACF_CALLBACK login_delegate_cont(struct _acf_login_delegate_t* self,
                                      const acf_string_t* user_name,
                                      const acf_string_t* password) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;
  // Verify param: user_name; type: string_byref_const
  if (!user_name)
    return;
  // Verify param: password; type: string_byref_const
  if (!password)
    return;

  // Execute
  AcfLoginDelegateCppToC::Get(self)->Continue(AcfString(user_name),
                                              AcfString(password));
}

void ACF_CALLBACK login_delegate_cancel(struct _acf_login_delegate_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfLoginDelegateCppToC::Get(self)->Cancel();
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfLoginDelegateCppToC::AcfLoginDelegateCppToC() {
  GetStruct()->cont = login_delegate_cont;
  GetStruct()->cancel = login_delegate_cancel;
}

// DESTRUCTOR - Do not edit by hand.

AcfLoginDelegateCppToC::~AcfLoginDelegateCppToC() {}

template <>
AcfRefPtr<AcfLoginDelegate> AcfCppToCRefCounted<
    AcfLoginDelegateCppToC,
    AcfLoginDelegate,
    acf_login_delegate_t>::UnwrapDerived(AcfWrapperType type,
                                         acf_login_delegate_t* s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfLoginDelegateCppToC,
                                   AcfLoginDelegate,
                                   acf_login_delegate_t>::kWrapperType =
    WT_LOGIN_DELEGATE;
