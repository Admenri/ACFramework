// Copyright (c) 2023 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=752b82ae91f626571ee7c6e0d18c44414eed3f0a$
//

#include "libacf_dll/cpptoc/cookie_cpptoc.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

acf_string_userfree_t ACF_CALLBACK cookie_get_name(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return NULL;

  // Execute
  AcfString _retval = AcfCookieCppToC::Get(self)->GetName();

  // Return type: string
  return _retval.DetachToUserFree();
}

void ACF_CALLBACK cookie_set_name(struct _acf_cookie_t* self,
                                  const acf_string_t* value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;
  // Unverified params: value

  // Execute
  AcfCookieCppToC::Get(self)->SetName(AcfString(value));
}

acf_string_userfree_t ACF_CALLBACK
cookie_get_value(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return NULL;

  // Execute
  AcfString _retval = AcfCookieCppToC::Get(self)->GetValue();

  // Return type: string
  return _retval.DetachToUserFree();
}

void ACF_CALLBACK cookie_set_value(struct _acf_cookie_t* self,
                                   const acf_string_t* value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;
  // Unverified params: value

  // Execute
  AcfCookieCppToC::Get(self)->SetValue(AcfString(value));
}

acf_string_userfree_t ACF_CALLBACK
cookie_get_domain(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return NULL;

  // Execute
  AcfString _retval = AcfCookieCppToC::Get(self)->GetDomain();

  // Return type: string
  return _retval.DetachToUserFree();
}

void ACF_CALLBACK cookie_set_domain(struct _acf_cookie_t* self,
                                    const acf_string_t* value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;
  // Unverified params: value

  // Execute
  AcfCookieCppToC::Get(self)->SetDomain(AcfString(value));
}

acf_string_userfree_t ACF_CALLBACK cookie_get_path(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return NULL;

  // Execute
  AcfString _retval = AcfCookieCppToC::Get(self)->GetPath();

  // Return type: string
  return _retval.DetachToUserFree();
}

void ACF_CALLBACK cookie_set_path(struct _acf_cookie_t* self,
                                  const acf_string_t* value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;
  // Unverified params: value

  // Execute
  AcfCookieCppToC::Get(self)->SetPath(AcfString(value));
}

int ACF_CALLBACK cookie_is_httponly(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfCookieCppToC::Get(self)->IsHttponly();

  // Return type: bool
  return _retval;
}

void ACF_CALLBACK cookie_set_httponly(struct _acf_cookie_t* self, int value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfCookieCppToC::Get(self)->SetHttponly(value ? true : false);
}

int ACF_CALLBACK cookie_is_secure(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  bool _retval = AcfCookieCppToC::Get(self)->IsSecure();

  // Return type: bool
  return _retval;
}

void ACF_CALLBACK cookie_set_secure(struct _acf_cookie_t* self, int value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfCookieCppToC::Get(self)->SetSecure(value ? true : false);
}

acf_cookie_same_site_t ACF_CALLBACK
cookie_get_same_site(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return ACF_COOKIE_SAME_SITE_NO_RESTRICTION;

  // Execute
  acf_cookie_same_site_t _retval = AcfCookieCppToC::Get(self)->GetSameSite();

  // Return type: simple
  return _retval;
}

void ACF_CALLBACK cookie_set_same_site(struct _acf_cookie_t* self,
                                       acf_cookie_same_site_t value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfCookieCppToC::Get(self)->SetSameSite(value);
}

acf_cookie_priority_t ACF_CALLBACK
cookie_get_priority(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return ACF_COOKIE_PRIORITY_MEDIUM;

  // Execute
  acf_cookie_priority_t _retval = AcfCookieCppToC::Get(self)->GetPriority();

  // Return type: simple
  return _retval;
}

void ACF_CALLBACK cookie_set_priority(struct _acf_cookie_t* self,
                                      acf_cookie_priority_t value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfCookieCppToC::Get(self)->SetPriority(value);
}

double ACF_CALLBACK cookie_get_creation(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  double _retval = AcfCookieCppToC::Get(self)->GetCreation();

  // Return type: simple
  return _retval;
}

void ACF_CALLBACK cookie_set_creation(struct _acf_cookie_t* self,
                                      double value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfCookieCppToC::Get(self)->SetCreation(value);
}

double ACF_CALLBACK cookie_get_expiry(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  double _retval = AcfCookieCppToC::Get(self)->GetExpiry();

  // Return type: simple
  return _retval;
}

void ACF_CALLBACK cookie_set_expiry(struct _acf_cookie_t* self, double value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfCookieCppToC::Get(self)->SetExpiry(value);
}

double ACF_CALLBACK cookie_get_last_access(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  double _retval = AcfCookieCppToC::Get(self)->GetLastAccess();

  // Return type: simple
  return _retval;
}

void ACF_CALLBACK cookie_set_last_access(struct _acf_cookie_t* self,
                                         double value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfCookieCppToC::Get(self)->SetLastAccess(value);
}

double ACF_CALLBACK cookie_get_last_update(struct _acf_cookie_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return 0;

  // Execute
  double _retval = AcfCookieCppToC::Get(self)->GetLastUpdate();

  // Return type: simple
  return _retval;
}

void ACF_CALLBACK cookie_set_last_update(struct _acf_cookie_t* self,
                                         double value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self)
    return;

  // Execute
  AcfCookieCppToC::Get(self)->SetLastUpdate(value);
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfCookieCppToC::AcfCookieCppToC() {
  GetStruct()->get_name = cookie_get_name;
  GetStruct()->set_name = cookie_set_name;
  GetStruct()->get_value = cookie_get_value;
  GetStruct()->set_value = cookie_set_value;
  GetStruct()->get_domain = cookie_get_domain;
  GetStruct()->set_domain = cookie_set_domain;
  GetStruct()->get_path = cookie_get_path;
  GetStruct()->set_path = cookie_set_path;
  GetStruct()->is_httponly = cookie_is_httponly;
  GetStruct()->set_httponly = cookie_set_httponly;
  GetStruct()->is_secure = cookie_is_secure;
  GetStruct()->set_secure = cookie_set_secure;
  GetStruct()->get_same_site = cookie_get_same_site;
  GetStruct()->set_same_site = cookie_set_same_site;
  GetStruct()->get_priority = cookie_get_priority;
  GetStruct()->set_priority = cookie_set_priority;
  GetStruct()->get_creation = cookie_get_creation;
  GetStruct()->set_creation = cookie_set_creation;
  GetStruct()->get_expiry = cookie_get_expiry;
  GetStruct()->set_expiry = cookie_set_expiry;
  GetStruct()->get_last_access = cookie_get_last_access;
  GetStruct()->set_last_access = cookie_set_last_access;
  GetStruct()->get_last_update = cookie_get_last_update;
  GetStruct()->set_last_update = cookie_set_last_update;
}

// DESTRUCTOR - Do not edit by hand.

AcfCookieCppToC::~AcfCookieCppToC() {}

template <>
AcfRefPtr<AcfCookie>
AcfCppToCRefCounted<AcfCookieCppToC, AcfCookie, acf_cookie_t>::UnwrapDerived(
    AcfWrapperType type,
    acf_cookie_t* s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfCookieCppToC, AcfCookie, acf_cookie_t>::
    kWrapperType = WT_COOKIE;
